@model Margille.Models.Pizza

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Pizza</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PizzaDescription" class="control-label"></label>
                <input asp-for="PizzaDescription" class="form-control" />
                <span asp-validation-for="PizzaDescription" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="ProductId" />
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductPrice" class="control-label"></label>
                <input asp-for="ProductPrice" class="form-control" />
                <span asp-validation-for="ProductPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PizzaIngredients" class="control-label"></label>
                <p>
                    @{
                        foreach (var item in Model.PizzaIngredients)
                        {
                            <p>@Html.DisplayFor(model => item.Ingredient.IngredientName)</p>
                            <input type="hidden" asp-for="@item.Ingredient.IngredientId"/>
                        }
                    }
                    </p>
                </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
</div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
